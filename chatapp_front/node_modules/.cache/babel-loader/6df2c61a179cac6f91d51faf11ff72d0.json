{"remainingRequest":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/babel-loader/lib/index.js!/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/src/views/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/src/views/Chat.vue","mtime":1646438752524},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/babel.config.js","mtime":1643429652595},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/cache-loader/dist/cjs.js","mtime":1643428235000},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/babel-loader/lib/index.js","mtime":1643429647236},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/cache-loader/dist/cjs.js","mtime":1643428235000},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/vue-loader/lib/index.js","mtime":1643429647372}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvc2hpcmluaGsvRGVza3RvcC9LYXplcm9vbmlfU2hpcmluX0NoYXRBcHAvY2hhdGFwcF9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBpbyBmcm9tICJzb2NrZXQuaW8tY2xpZW50IjsKaW1wb3J0IHZhcnMgZnJvbSAiQC9lbnYuanMiOwppbXBvcnQgQ2hhdE1lc3NhZ2UgZnJvbSAiQC9jb21wb25lbnRzL0NoYXRNZXNzYWdlLnZ1ZSI7CmltcG9ydCBDaGF0VXNlciBmcm9tICJAL2NvbXBvbmVudHMvQ2hhdFVzZXIudnVlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUaGVDaGF0Q29tcG9uZW50IiwKICBwcm9wczogewogICAgQ2hhdFVzZXJOYW1lOiBTdHJpbmcKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciB2bSA9IHRoaXM7CiAgICB0aGlzLnNvY2tldC5vbigiQ09OTkVDVEVEIiwgZnVuY3Rpb24gKGlkKSB7CiAgICAgIHZtLnNvY2tldElEID0gaWQ7CgogICAgICBfdGhpcy5zb2NrZXQuZW1pdCgndXNlci1qb2luZWQnLCB7CiAgICAgICAgdXNlcjogX3RoaXMuQ2hhdFVzZXJOYW1lIHx8ICJBbm9ueW1vdXMiCiAgICAgIH0pOwogICAgfSk7CiAgICB0aGlzLnNvY2tldC5vbigiam9pbmVkIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgdm0udXNlcnMgPSBkYXRhLnVzZXI7CiAgICAgIGNvbnNvbGUubG9nKHZtLnVzZXJzKTsKICAgIH0pOwogICAgdGhpcy5zb2NrZXQub24oJ3VzZXItaGFzLWpvaW5lZCcsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHZtLnVzZXJUaGF0Q29ubmVjdGVkID0gZGF0YS5tZXNzYWdlOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB2bS51c2VyVGhhdENvbm5lY3RlZCA9ICcnOwogICAgICB9LCAzMDAwKTsKICAgIH0pOwogICAgdGhpcy5zb2NrZXQub24oJ3VzZXItZGlzY29ubmVjdGVkJywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgdm0udXNlclRoYXREaXNjb25uZWN0ZWQgPSBkYXRhLm1lc3NhZ2VEaXNjb25uZWN0OwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB2bS51c2VyVGhhdERpc2Nvbm5lY3RlZCA9ICcnOwogICAgICB9LCAzMDAwKTsKICAgIH0pOwogICAgdGhpcy5zb2NrZXQub24oJ01FU1NBR0UnLCBmdW5jdGlvbiAobWVzc2FnZSkgewogICAgICBtZXNzYWdlLmlkID0gX3RoaXMuZ2V0TmV3SWQoKTsKICAgICAgdm0ubWVzc2FnZXMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHZtLm1lc3NhZ2VzKSwgW21lc3NhZ2VdKTsKICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7CgogICAgICBfdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpcy5zY3JvbGxUb0VuZCgpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG1lc3NhZ2VDb250ZW50OiBmdW5jdGlvbiBtZXNzYWdlQ29udGVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZS50cmltKCkgPT09ICcnOwogICAgfSwKICAgIHNlbmRlclJlY2VpdmVyOiBmdW5jdGlvbiBzZW5kZXJSZWNlaXZlcihzb2NrZXRJRCkgewogICAgICByZXR1cm4gc29ja2V0SUQgPT09IHRoaXMuc29ja2V0SUQ7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gc3RvcmUgdGhlIGNvbm5lY3Rpb24gSUQgc28gd2UgY2FuIHVzZSBpdCBsYXRlcgogICAgICBzb2NrZXRJRDogJycsCiAgICAgIG1lc3NhZ2U6ICcnLAogICAgICBtZXNzYWdlczogW10sCiAgICAgIHVzZXJzOiBbXSwKICAgICAgY3VycmVudElEOiBbXSwKICAgICAgdXNlclRoYXREaXNjb25uZWN0ZWQ6ICcnLAogICAgICB1c2VyVGhhdENvbm5lY3RlZDogJycsCiAgICAgIHNvY2tldDogaW8odmFycy5iYXNlUGF0aCwgewogICAgICAgIHdpdGhDcmVkZW50aWFsczogZmFsc2UsCiAgICAgICAgZXh0cmFIZWFkZXJzOiB7CiAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonCiAgICAgICAgfQogICAgICB9KQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbmRNZXNzYWdlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZSgpIHsKICAgICAgdGhpcy5zb2NrZXQuZW1pdCgnU0VORF9NRVNTQUdFJywgewogICAgICAgIHVzZXI6IHRoaXMuQ2hhdFVzZXJOYW1lIHx8ICJBbm9ueW1vdXMiLAogICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZQogICAgICB9KTsKICAgICAgdGhpcy5tZXNzYWdlID0gJyc7CiAgICB9LAogICAgZ2V0TmV3SWQ6IGZ1bmN0aW9uIGdldE5ld0lkKCkgewogICAgICB0aGlzLmN1cnJlbnRJRCsrOwogICAgICByZXR1cm4gdGhpcy5jdXJyZW50SUQ7CiAgICB9LAogICAgc2VuZE9uRW50ZXI6IGZ1bmN0aW9uIHNlbmRPbkVudGVyKCkgewogICAgICBpZiAodGhpcy5tZXNzYWdlQ29udGVudCA9PSBmYWxzZSAmJiBldmVudC5rZXlDb2RlID09IDEzKSB7CiAgICAgICAgdGhpcy5zZW5kTWVzc2FnZSgpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc29ja2V0LmVtaXQoIlRZUElORyIsIHsKICAgICAgICAgIHVzZXI6IHRoaXMudXNlcm5hbWUgfHwgIkFuYW55bW91cyIKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHNjcm9sbFRvRW5kOiBmdW5jdGlvbiBzY3JvbGxUb0VuZCgpIHsKICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLiRyZWZzLnNjcm9sbDsKICAgICAgY29udGVudC5zY3JvbGxUb3AgPSBjb250ZW50LnNjcm9sbEhlaWdodDsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENoYXRNZXNzYWdlOiBDaGF0TWVzc2FnZSwKICAgIENoYXRVc2VyOiBDaGF0VXNlcgogIH0KfTs="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <main>\n   \n      <section id=\"chat\">\n        <!-- left hand side -> users go here -->\n        <section id=\"chat-users-ui\">\n          <h2 class=\"online-users\">Current Users:</h2>\n          \n          <ul id=\"current-users\">\n            <ChatUser\n            v-for=\"user in users\"\n            :key=\"user.user\"\n            :username=\"user\"\n            />\n          </ul>\n        </section>\n        \n      \n\n        <!-- right hand side -> cha UI -->\n        <section id=\"chat-messages-ui\">\n\n          <div class=\"welcome-message\">\n          <img src=\"@/assets/images/logo_v.png\" alt=\"Safe Chat logo\" class=\"logo_v\">\n          <h1 class=\"welcome-text\">Welcome, {{ ChatUserName }}</h1>\n          </div>\n\n          <!-- render a component for every message -->    \n          <div class=\"chat-messages\"  ref=\"scroll\">\n            <ChatMessage\n            v-for=\"msg in messages\"\n            :key=\"msg.id\"\n            :message=\"msg.message\"\n            :user=\"msg.user\"\n            :sender=\"ChatUserName === msg.user ? 'sender' : 'receiver'\"\n            />\n          </div>\n         \n          <section id=\"text-wrapper\">\n            <textarea @keyup.enter=\"sendOnEnter\" id=\"message\" v-model=\"message\" placeholder=\"What's on your mind?\"></textarea>\n\n            <button id=\"sendMessage\" \n            @click=\"sendMessage\" \n            :disabled=\"messageContent\"\n            :class=\"{'disabled': messageContent}\">\n            <i class=\"fa-solid fa-plane-departure\"></i>\n            </button>\n            <div class=\"status\"> \n              <p class=\"disconnected\">{{ userThatDisconnected}}</p> \n              <p class=\"disconnected\">{{ userThatConnected }}</p>   \n            </div>\n          </section>\n        </section>\n      </section>\n    \n  </main>\n</template>\n\n<script>\nimport io from \"socket.io-client\";\nimport vars from \"@/env.js\";\nimport ChatMessage from \"@/components/ChatMessage.vue\";\nimport ChatUser from \"@/components/ChatUser.vue\";\n\n\nexport default {\n  name: \"TheChatComponent\",\n\n  props: {\n    ChatUserName: String, \n  },\n\n  mounted() {\n    let vm = this;\n\n    this.socket.on(\"CONNECTED\", (id) => {\n      vm.socketID = id;\n\n      this.socket.emit('user-joined', { user: this.ChatUserName || \"Anonymous\"});\n    })\n\n    this.socket.on(\"joined\", (data) => {\n      vm.users = data.user;\n      console.log(vm.users);\n    })\n\n    this.socket.on('user-has-joined', (data) => {\n      vm.userThatConnected = data.message;\n      setTimeout(function() { vm.userThatConnected = ''; }, 3000);\n    })\n\n\n    this.socket.on('user-disconnected', (data) => {\n      vm.userThatDisconnected = data.messageDisconnect;\n      setTimeout(function() { vm.userThatDisconnected = ''; }, 3000);\n    })\n\n\n    this.socket.on('MESSAGE', (message) => {\n      message.id = this.getNewId();\n      \n      vm.messages = [ ...vm.messages, message];\n      console.log(message);\n\n       this.$nextTick(() => this.scrollToEnd());\n\n    })\n  },\n\n  computed: {\n    messageContent: function() {\n      return this.message.trim() === '';\n    },\n\n    senderReceiver: function(socketID) {\n      return socketID === this.socketID\n    }\n  },\n\n\n  data() {\n    return {\n      // store the connection ID so we can use it later\n      socketID: '',\n      message: '',\n      messages: [],\n      users: [],\n      currentID: [],\n      userThatDisconnected: '',\n      userThatConnected: '',\n     \n\n\n      socket: io(vars.basePath, {\n        withCredentials: false,\n        extraHeaders: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      })\n    }\n  },\n\n  methods : {\n    sendMessage() {\n    this.socket.emit('SEND_MESSAGE', {user: this.ChatUserName || \"Anonymous\", message: this.message});\n    \n    this.message = '';\n    },\n\n    getNewId() {\n      this.currentID++;\n      return this.currentID;\n    },\n\n    sendOnEnter() {\n      if (this.messageContent == false && event.keyCode == 13) {\n        this.sendMessage();\n      }else {\n        this.socket.emit(\"TYPING\", { user: this.username || \"Ananymous\"});\n      }\n    },\n\n    scrollToEnd: function () {\n            var content = this.$refs.scroll;\n            content.scrollTop = content.scrollHeight\n        },\n\n  },\n\n  components: {\n    ChatMessage, ChatUser,\n  }\n}\n\n\n\n\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/sass/chat.scss\";\n</style>\n"],"sourceRoot":"src/views"}]}