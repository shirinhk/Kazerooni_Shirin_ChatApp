{"remainingRequest":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/src/views/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/src/views/Chat.vue","mtime":1646438752524},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/cache-loader/dist/cjs.js","mtime":1643428235000},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/babel-loader/lib/index.js","mtime":1643429647236},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/cache-loader/dist/cjs.js","mtime":1643428235000},{"path":"/Users/shirinhk/Desktop/Kazerooni_Shirin_ChatApp/chatapp_front/node_modules/vue-loader/lib/index.js","mtime":1643429647372}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpbyBmcm9tICJzb2NrZXQuaW8tY2xpZW50IjsKaW1wb3J0IHZhcnMgZnJvbSAiQC9lbnYuanMiOwppbXBvcnQgQ2hhdE1lc3NhZ2UgZnJvbSAiQC9jb21wb25lbnRzL0NoYXRNZXNzYWdlLnZ1ZSI7CmltcG9ydCBDaGF0VXNlciBmcm9tICJAL2NvbXBvbmVudHMvQ2hhdFVzZXIudnVlIjsKCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRoZUNoYXRDb21wb25lbnQiLAoKICBwcm9wczogewogICAgQ2hhdFVzZXJOYW1lOiBTdHJpbmcsIAogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBsZXQgdm0gPSB0aGlzOwoKICAgIHRoaXMuc29ja2V0Lm9uKCJDT05ORUNURUQiLCAoaWQpID0+IHsKICAgICAgdm0uc29ja2V0SUQgPSBpZDsKCiAgICAgIHRoaXMuc29ja2V0LmVtaXQoJ3VzZXItam9pbmVkJywgeyB1c2VyOiB0aGlzLkNoYXRVc2VyTmFtZSB8fCAiQW5vbnltb3VzIn0pOwogICAgfSkKCiAgICB0aGlzLnNvY2tldC5vbigiam9pbmVkIiwgKGRhdGEpID0+IHsKICAgICAgdm0udXNlcnMgPSBkYXRhLnVzZXI7CiAgICAgIGNvbnNvbGUubG9nKHZtLnVzZXJzKTsKICAgIH0pCgogICAgdGhpcy5zb2NrZXQub24oJ3VzZXItaGFzLWpvaW5lZCcsIChkYXRhKSA9PiB7CiAgICAgIHZtLnVzZXJUaGF0Q29ubmVjdGVkID0gZGF0YS5tZXNzYWdlOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB2bS51c2VyVGhhdENvbm5lY3RlZCA9ICcnOyB9LCAzMDAwKTsKICAgIH0pCgoKICAgIHRoaXMuc29ja2V0Lm9uKCd1c2VyLWRpc2Nvbm5lY3RlZCcsIChkYXRhKSA9PiB7CiAgICAgIHZtLnVzZXJUaGF0RGlzY29ubmVjdGVkID0gZGF0YS5tZXNzYWdlRGlzY29ubmVjdDsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsgdm0udXNlclRoYXREaXNjb25uZWN0ZWQgPSAnJzsgfSwgMzAwMCk7CiAgICB9KQoKCiAgICB0aGlzLnNvY2tldC5vbignTUVTU0FHRScsIChtZXNzYWdlKSA9PiB7CiAgICAgIG1lc3NhZ2UuaWQgPSB0aGlzLmdldE5ld0lkKCk7CiAgICAgIAogICAgICB2bS5tZXNzYWdlcyA9IFsgLi4udm0ubWVzc2FnZXMsIG1lc3NhZ2VdOwogICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTsKCiAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB0aGlzLnNjcm9sbFRvRW5kKCkpOwoKICAgIH0pCiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIG1lc3NhZ2VDb250ZW50OiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZS50cmltKCkgPT09ICcnOwogICAgfSwKCiAgICBzZW5kZXJSZWNlaXZlcjogZnVuY3Rpb24oc29ja2V0SUQpIHsKICAgICAgcmV0dXJuIHNvY2tldElEID09PSB0aGlzLnNvY2tldElECiAgICB9CiAgfSwKCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyBzdG9yZSB0aGUgY29ubmVjdGlvbiBJRCBzbyB3ZSBjYW4gdXNlIGl0IGxhdGVyCiAgICAgIHNvY2tldElEOiAnJywKICAgICAgbWVzc2FnZTogJycsCiAgICAgIG1lc3NhZ2VzOiBbXSwKICAgICAgdXNlcnM6IFtdLAogICAgICBjdXJyZW50SUQ6IFtdLAogICAgICB1c2VyVGhhdERpc2Nvbm5lY3RlZDogJycsCiAgICAgIHVzZXJUaGF0Q29ubmVjdGVkOiAnJywKICAgICAKCgogICAgICBzb2NrZXQ6IGlvKHZhcnMuYmFzZVBhdGgsIHsKICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IGZhbHNlLAogICAgICAgIGV4dHJhSGVhZGVyczogewogICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJwogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9LAoKICBtZXRob2RzIDogewogICAgc2VuZE1lc3NhZ2UoKSB7CiAgICB0aGlzLnNvY2tldC5lbWl0KCdTRU5EX01FU1NBR0UnLCB7dXNlcjogdGhpcy5DaGF0VXNlck5hbWUgfHwgIkFub255bW91cyIsIG1lc3NhZ2U6IHRoaXMubWVzc2FnZX0pOwogICAgCiAgICB0aGlzLm1lc3NhZ2UgPSAnJzsKICAgIH0sCgogICAgZ2V0TmV3SWQoKSB7CiAgICAgIHRoaXMuY3VycmVudElEKys7CiAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRJRDsKICAgIH0sCgogICAgc2VuZE9uRW50ZXIoKSB7CiAgICAgIGlmICh0aGlzLm1lc3NhZ2VDb250ZW50ID09IGZhbHNlICYmIGV2ZW50LmtleUNvZGUgPT0gMTMpIHsKICAgICAgICB0aGlzLnNlbmRNZXNzYWdlKCk7CiAgICAgIH1lbHNlIHsKICAgICAgICB0aGlzLnNvY2tldC5lbWl0KCJUWVBJTkciLCB7IHVzZXI6IHRoaXMudXNlcm5hbWUgfHwgIkFuYW55bW91cyJ9KTsKICAgICAgfQogICAgfSwKCiAgICBzY3JvbGxUb0VuZDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgY29udGVudCA9IHRoaXMuJHJlZnMuc2Nyb2xsOwogICAgICAgICAgICBjb250ZW50LnNjcm9sbFRvcCA9IGNvbnRlbnQuc2Nyb2xsSGVpZ2h0CiAgICAgICAgfSwKCiAgfSwKCiAgY29tcG9uZW50czogewogICAgQ2hhdE1lc3NhZ2UsIENoYXRVc2VyLAogIH0KfQoKCgoK"},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <main>\n   \n      <section id=\"chat\">\n        <!-- left hand side -> users go here -->\n        <section id=\"chat-users-ui\">\n          <h2 class=\"online-users\">Current Users:</h2>\n          \n          <ul id=\"current-users\">\n            <ChatUser\n            v-for=\"user in users\"\n            :key=\"user.user\"\n            :username=\"user\"\n            />\n          </ul>\n        </section>\n        \n      \n\n        <!-- right hand side -> cha UI -->\n        <section id=\"chat-messages-ui\">\n\n          <div class=\"welcome-message\">\n          <img src=\"@/assets/images/logo_v.png\" alt=\"Safe Chat logo\" class=\"logo_v\">\n          <h1 class=\"welcome-text\">Welcome, {{ ChatUserName }}</h1>\n          </div>\n\n          <!-- render a component for every message -->    \n          <div class=\"chat-messages\"  ref=\"scroll\">\n            <ChatMessage\n            v-for=\"msg in messages\"\n            :key=\"msg.id\"\n            :message=\"msg.message\"\n            :user=\"msg.user\"\n            :sender=\"ChatUserName === msg.user ? 'sender' : 'receiver'\"\n            />\n          </div>\n         \n          <section id=\"text-wrapper\">\n            <textarea @keyup.enter=\"sendOnEnter\" id=\"message\" v-model=\"message\" placeholder=\"What's on your mind?\"></textarea>\n\n            <button id=\"sendMessage\" \n            @click=\"sendMessage\" \n            :disabled=\"messageContent\"\n            :class=\"{'disabled': messageContent}\">\n            <i class=\"fa-solid fa-plane-departure\"></i>\n            </button>\n            <div class=\"status\"> \n              <p class=\"disconnected\">{{ userThatDisconnected}}</p> \n              <p class=\"disconnected\">{{ userThatConnected }}</p>   \n            </div>\n          </section>\n        </section>\n      </section>\n    \n  </main>\n</template>\n\n<script>\nimport io from \"socket.io-client\";\nimport vars from \"@/env.js\";\nimport ChatMessage from \"@/components/ChatMessage.vue\";\nimport ChatUser from \"@/components/ChatUser.vue\";\n\n\nexport default {\n  name: \"TheChatComponent\",\n\n  props: {\n    ChatUserName: String, \n  },\n\n  mounted() {\n    let vm = this;\n\n    this.socket.on(\"CONNECTED\", (id) => {\n      vm.socketID = id;\n\n      this.socket.emit('user-joined', { user: this.ChatUserName || \"Anonymous\"});\n    })\n\n    this.socket.on(\"joined\", (data) => {\n      vm.users = data.user;\n      console.log(vm.users);\n    })\n\n    this.socket.on('user-has-joined', (data) => {\n      vm.userThatConnected = data.message;\n      setTimeout(function() { vm.userThatConnected = ''; }, 3000);\n    })\n\n\n    this.socket.on('user-disconnected', (data) => {\n      vm.userThatDisconnected = data.messageDisconnect;\n      setTimeout(function() { vm.userThatDisconnected = ''; }, 3000);\n    })\n\n\n    this.socket.on('MESSAGE', (message) => {\n      message.id = this.getNewId();\n      \n      vm.messages = [ ...vm.messages, message];\n      console.log(message);\n\n       this.$nextTick(() => this.scrollToEnd());\n\n    })\n  },\n\n  computed: {\n    messageContent: function() {\n      return this.message.trim() === '';\n    },\n\n    senderReceiver: function(socketID) {\n      return socketID === this.socketID\n    }\n  },\n\n\n  data() {\n    return {\n      // store the connection ID so we can use it later\n      socketID: '',\n      message: '',\n      messages: [],\n      users: [],\n      currentID: [],\n      userThatDisconnected: '',\n      userThatConnected: '',\n     \n\n\n      socket: io(vars.basePath, {\n        withCredentials: false,\n        extraHeaders: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      })\n    }\n  },\n\n  methods : {\n    sendMessage() {\n    this.socket.emit('SEND_MESSAGE', {user: this.ChatUserName || \"Anonymous\", message: this.message});\n    \n    this.message = '';\n    },\n\n    getNewId() {\n      this.currentID++;\n      return this.currentID;\n    },\n\n    sendOnEnter() {\n      if (this.messageContent == false && event.keyCode == 13) {\n        this.sendMessage();\n      }else {\n        this.socket.emit(\"TYPING\", { user: this.username || \"Ananymous\"});\n      }\n    },\n\n    scrollToEnd: function () {\n            var content = this.$refs.scroll;\n            content.scrollTop = content.scrollHeight\n        },\n\n  },\n\n  components: {\n    ChatMessage, ChatUser,\n  }\n}\n\n\n\n\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/sass/chat.scss\";\n</style>\n"]}]}